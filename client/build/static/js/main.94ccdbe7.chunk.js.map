{"version":3,"sources":["components/Card.js","components/JobStoryList.js","components/SideBar.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","type","toLowerCase","style","maxWidth","textTransform","text","JobStoryList","handleChange","event","list","_this","getParentState","filteredJobStoryList","pattern","target","value","filter","job","context","search","motivation","outcome","setParentState","renderedJobStoryList","document","getElementById","oninput","this","map","marginBottom","components_Card","Component","SideBar","data","product","NavLink","to","key","activeClassName","title","usertypes","userType","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getState","bind","assertThisInitialized","setState","state","originalJobStoryList","productData","isLoaded","error","_this2","fetch","then","r","json","jobStoriesData","history","listen","handleURLChange","URL","pathname","split","jobs","includes","_this$state","message","Link","id","placeholder","components_SideBar","role","components_JobStoryList","withRouter","ReactDOM","render","BrowserRouter","Route","component"],"mappings":"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","file":"static/js/main.94ccdbe7.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card(props) {\n    return (\n        <div className={\"list-group-item list-group-item-action flex-row align-items-start \" + props.type.toLowerCase()} style={{maxWidth: 20 + 'rem'}}>\n            <small style={{textTransform: 'capitalize'}}>{props.type}</small>\n            <p className=\"mb-1\">{props.text || 'Empty card'}</p>\n        </div>\n    )\n}\n\nexport default Card;","import React, {Component} from 'react';\nimport Card from './Card';\n\nclass JobStoryList extends Component {\n    componentDidMount() {\n        document.getElementById(\"filter\").oninput = this.handleChange;\n    }\n\n    handleChange = (event) => {\n        let list = this.props.getParentState().filteredJobStoryList;\n        let pattern = event.target.value.toLowerCase();\n        list = list.filter(job => job.context.toLowerCase().search(pattern) !== -1 || job.motivation.toLowerCase().search(pattern) !== -1 || job.outcome.toLowerCase().search(pattern) !== -1 );\n        this.props.setParentState({\n            renderedJobStoryList: list,\n        });\n    }\n\n    render() {\n        return (\n            this.props.getParentState().renderedJobStoryList.map(job => (\n                <div className=\"list-group flex-row\" style={{marginBottom: 10 + 'px'}}>\n                    <Card text={job.context} type=\"context\"/>\n                    <Card text={job.motivation} type=\"motivation\"/>\n                    <Card text={job.outcome} type=\"outcome\"/>\n                </div>\n            ))\n        );\n    }\n}\n\nexport default JobStoryList;","import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\n\nclass SideBar extends Component {\n    render () {\n        return (\n            <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n                <div className=\"sidebar-sticky\">\n                    <ul className=\"nav flex-column\">\n                        {this.props.data.map(product => (\n                            <li className=\"nav-item\">\n                                <NavLink to={'/product/' + product.key} activeClassName=\"selected\">{product.title}</NavLink>\n                                <ul>\n                                    {product.usertypes.map(userType => (\n                                        <li className=\"nav-item\">\n                                            <NavLink to={'/usertype/' + userType.key} activeClassName=\"selected\">{userType.title}</NavLink>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default SideBar;","import React, { Component } from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport JobStoryList from './components/JobStoryList';\nimport SideBar from './components/SideBar';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getState = this.getState.bind(this);\n    this.setState = this.setState.bind(this);\n\n    this.state = {\n      originalJobStoryList: [],\n      filteredJobStoryList: [],\n      renderedJobStoryList: [],\n      productData: [],\n      isLoaded: false,\n      error: null,\n    }\n  }\n\n  componentDidMount() {\n    // Load job stories and update lists right after it\n    fetch(\"/api/jobstories\")\n      .then(r => r.json())\n      .then(\n        (jobStoriesData) => {\n          this.setState({\n            originalJobStoryList: jobStoriesData,\n            isLoaded: true,\n          });\n          this.props.history.listen(() => {\n            this.handleURLChange();\n          });\n          this.handleURLChange();\n        },\n        (error) => {\n          this.setState({\n            error: error,\n            isLoaded: true,\n          });\n        },\n      );\n    // Load product and usertype categories\n    fetch(\"/api/categories\")\n      .then(r => r.json())\n      .then(\n        (productData) => {\n          this.setState({\n            productData: productData,\n            isLoaded: true,\n          });\n        },\n        (error) => {\n          this.setState({\n            error: error,\n            isLoaded: true,\n          });\n        },\n      );\n  }\n  \n  handleURLChange() {\n    let type = new URL(document.URL).pathname.split('/')[1] || \"home\";\n    let jobs = this.state.originalJobStoryList;\n    let key = new URL(document.URL).pathname.split('/')[2] || \"home\";\n\n    // Reset search field on URL change\n    document.getElementById(\"filter\").value = \"\";\n\n    switch (type) {\n      case 'product':\n        jobs = jobs.filter(function (job) {\n          return job.product == key;\n        });\n        break;\n      case 'usertype':\n        jobs = jobs.filter(function (job) {\n          return job.usertypes.includes(key);\n        });\n        break;\n      default:\n        // leave 'jobs' unaffected in any other cases\n    }\n    \n    this.setState({\n      filteredJobStoryList: jobs,\n      renderedJobStoryList: jobs,\n    });\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  render() {\n    const {originalJobStoryList, filteredJobStoryList, renderedJobStoryList, productData, isLoaded, error} = this.state;\n    if(error) {\n      return (<h5>Error loading JSON data: {error.message}</h5>);\n    } else if (!isLoaded) {\n      return (<h5>Loading data...</h5>);\n    } else {\n      return (\n        <div>\n          <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n            <Link id=\"home\" className=\"navbar-brand col-sm-3 col-md-2 mr-0\" to=\"/\">Job Stories</Link>\n            <input className=\"form-control form-control-dark w-100\" id=\"filter\" type=\"text\" placeholder=\"Search job stories...\" />\n            <ul className=\"navbar-nav px-3\">\n              <li className=\"nav-item text-nowrap\"><a className=\"nav-link\">Sign out</a></li>\n            </ul>\n          </nav>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <SideBar data={productData} />\n              <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n                <h2>Job Stories</h2>\n                <JobStoryList data={renderedJobStoryList} setParentState={this.setState} getParentState={this.getState} />\n              </main>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <Route component={App} />\n    </Router>,\n    document.getElementById('root')\n);\n\n//serviceWorker.unregister();\n"],"sourceRoot":""}